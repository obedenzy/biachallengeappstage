"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/weekly-data";
exports.ids = ["pages/api/weekly-data"];
exports.modules = {

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "date-fns":
/*!***************************!*\
  !*** external "date-fns" ***!
  \***************************/
/***/ ((module) => {

module.exports = import("date-fns");;

/***/ }),

/***/ "(api)/./lib/utils.js":
/*!**********************!*\
  !*** ./lib/utils.js ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateRawScore\": () => (/* binding */ calculateRawScore),\n/* harmony export */   \"cityGroups\": () => (/* binding */ cityGroups),\n/* harmony export */   \"formatDateForLabel\": () => (/* binding */ formatDateForLabel),\n/* harmony export */   \"formatDateForQuery\": () => (/* binding */ formatDateForQuery),\n/* harmony export */   \"generateWeekDropdownOptions\": () => (/* binding */ generateWeekDropdownOptions),\n/* harmony export */   \"getQueryDates\": () => (/* binding */ getQueryDates),\n/* harmony export */   \"priorities\": () => (/* binding */ priorities)\n/* harmony export */ });\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns */ \"date-fns\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([date_fns__WEBPACK_IMPORTED_MODULE_0__]);\ndate_fns__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Helper function for basic date formatting for labels (e.g., \"Feb 1\")\nconst formatDateForLabel = (date)=>{\n    return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(date, \"MMM d\");\n};\n// Function to generate week options for the dropdown\nconst generateWeekDropdownOptions = ()=>{\n    const startDate = new Date(\"2025-02-01T00:00:00.000Z\"); // Start date: Feb 1st, 2025\n    const today = new Date(); // Current date\n    const generatedWeeks = [];\n    // Find the start of the week (Sunday) for the start date\n    let currentWeekStart = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.startOfWeek)(startDate, {\n        weekStartsOn: 0\n    }); // 0 represents Sunday\n    const currentWeekEnd = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.endOfWeek)(today, {\n        weekStartsOn: 0\n    });\n    while(currentWeekStart <= currentWeekEnd){\n        const weekEnd = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.endOfWeek)(currentWeekStart, {\n            weekStartsOn: 0\n        });\n        const weekNumber = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.getWeek)(currentWeekStart, {\n            weekStartsOn: 0\n        }); // Get week number\n        const displayWeekNumber = weekNumber >= 5 ? weekNumber - 5 : weekNumber; // Adjust for display\n        const weekLabel = `Week ${displayWeekNumber} - ${formatDateForLabel(currentWeekStart)} to ${formatDateForLabel(weekEnd)}`;\n        generatedWeeks.push({\n            label: weekLabel,\n            weekNumber: weekNumber,\n            displayWeekNumber: displayWeekNumber,\n            startDate: currentWeekStart,\n            endDate: weekEnd\n        });\n        currentWeekStart = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.addWeeks)(currentWeekStart, 1); // Move to the next week\n    }\n    return generatedWeeks;\n};\n// Helper function to format dates for database queries (YYYY-MM-DD)\nconst formatDateForQuery = (date)=>{\n    return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.format)(date, \"yyyy-MM-dd\");\n};\n// Function to get query dates (start and end) from a week label\nconst getQueryDates = (weekLabel, weeks)=>{\n    const weekData = weeks.find((week)=>week.label === weekLabel);\n    if (!weekData) {\n        return null; // Or handle the error appropriately\n    }\n    return {\n        startDate: formatDateForQuery(weekData.startDate),\n        endDate: formatDateForQuery(weekData.endDate)\n    };\n};\n// Calculate the *raw* score (number of \"yes\" answers) for a single day's entry\nconst calculateRawScore = (participant)=>{\n    let score = 0;\n    if (participant.hydration_goals === \"yes\") score++;\n    if (participant.diet_nutrition === \"yes\") score++;\n    if (participant.study_read === \"yes\") score++;\n    if (participant.daily_progress_photo === \"yes\") score++;\n    if (participant.mindfulness_practice === \"yes\") score++;\n    if (participant.abstinence === \"yes\") score++;\n    if (participant.connection_networking === \"yes\") score++;\n    return score;\n};\nconst cityGroups = [\n    \"Atlanta, GA\",\n    \"Austin, TX\",\n    \"Baltimore/DC\",\n    \"Boston (New England)\",\n    \"Chicago, IL\",\n    \"Cincinnati, OH\",\n    \"Cleveland, OH\",\n    \"Columbus, OH\",\n    \"Conneticut / West Mass.\",\n    \"Dallas/Ft. Worth\",\n    \"Denver, CO\",\n    \"Detroit, MI\",\n    \"Fort Myers/Cape Coral, FL\",\n    \"Honolulu, HI\",\n    \"Houston, TX\",\n    \"Hunstville, AL\",\n    \"Indianapolis, IN\",\n    \"Jacksonville, FL\",\n    \"Kansas City, MO\",\n    \"Las Vegas, NV\",\n    \"Lexington, KY\",\n    \"Los Angeles, CA\",\n    \"Miami/West Palm Beach, FL\",\n    \"Milwaukee, WI\",\n    \"Nashville, TN\",\n    \"New York City, NY\",\n    \"North Carolina\",\n    \"Oklahoma\",\n    \"Orlando, FL\",\n    \"Philadelphia, PA\",\n    \"Phoenix, AZ\",\n    \"Pittsburgh, PA\",\n    \"Richmond, VA\",\n    \"San Antonio, TX\",\n    \"San Diego, CA\",\n    \"San Francisco/San Jose, CA\",\n    \"Seattle, WA\",\n    \"South Carolina\",\n    \"St. Louis, MO\",\n    \"Tampa, FL\",\n    \"West Virginia\"\n];\nconst priorities = [\n    \"Weight Loss\",\n    \"Mental Health/Mindset\",\n    \"Healthy Mindful Eating\",\n    \"Working Out/Movement\",\n    \"Discipline/Consistency/Sustainability\"\n];\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/utils.js\n");

/***/ }),

/***/ "(api)/./pages/api/weekly-data.js":
/*!**********************************!*\
  !*** ./pages/api/weekly-data.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/utils */ \"(api)/./lib/utils.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_utils__WEBPACK_IMPORTED_MODULE_1__]);\n_lib_utils__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(\"https://xfztyobcoebcckcneaxg.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhmenR5b2Jjb2ViY2NrY25lYXhnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzgyMTYxOTMsImV4cCI6MjA1Mzc5MjE5M30.AEzek4wb6_AJWKUFlCPkCPUGZbhkumwq0oYvZIXM9y4\");\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        const { weekLabel  } = req.query;\n        if (!weekLabel) {\n            return res.status(400).json({\n                error: \"Week label is required\"\n            });\n        }\n        const weeks = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.generateWeekDropdownOptions)();\n        const queryDates = (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.getQueryDates)(weekLabel, weeks);\n        if (!queryDates) {\n            return res.status(400).json({\n                error: \"Invalid week label\"\n            });\n        }\n        try {\n            const { startDate , endDate  } = queryDates;\n            const endDateWithTime = `${endDate}T23:59:59.999Z`;\n            const { data , error  } = await supabase.from(\"biaformtable\").select(\"*\").gte(\"created_at\", startDate).lte(\"created_at\", endDateWithTime);\n            if (error) {\n                throw error;\n            }\n            // Group data by full_name (case-insensitive)\n            const groupedData = {};\n            data.forEach((entry)=>{\n                const lowerCaseName = entry.full_name.toLowerCase();\n                if (!groupedData[lowerCaseName]) {\n                    groupedData[lowerCaseName] = {\n                        entries: [],\n                        originalName: entry.full_name\n                    };\n                }\n                groupedData[lowerCaseName].entries.push(entry);\n            });\n            // Find the selected week number\n            const selectedWeekData = weeks.find((week)=>week.label === weekLabel);\n            const selectedWeekNumber = selectedWeekData ? selectedWeekData.weekNumber : null;\n            // Calculate total raw score and divide by appropriate divisor\n            const averagedData = [];\n            for(const lowerCaseName in groupedData){\n                const { entries , originalName  } = groupedData[lowerCaseName];\n                let totalRawScore = 0;\n                entries.forEach((entry)=>{\n                    totalRawScore += (0,_lib_utils__WEBPACK_IMPORTED_MODULE_1__.calculateRawScore)(entry); // Sum raw scores\n                });\n                let divisor = 49; // Default divisor for Week 2 and beyond\n                if (selectedWeekNumber === 5) {\n                    divisor = 56; // Divisor for Week 1\n                }\n                let averageScore = totalRawScore / divisor * 100;\n                if (averageScore > 100) {\n                    averageScore = 100;\n                }\n                averagedData.push({\n                    full_name: originalName,\n                    average_score: averageScore,\n                    num_entries: entries.length\n                });\n            }\n            // Sort the data alphabetically by full name\n            const sortedData = averagedData.sort((a, b)=>a.full_name.localeCompare(b.full_name));\n            res.status(200).json(sortedData);\n        } catch (error1) {\n            console.error(\"Error fetching weekly data:\", error1);\n            res.status(500).json({\n                error: \"Error fetching weekly data\"\n            });\n        }\n    } else {\n        res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/weekly-data.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/weekly-data.js"));
module.exports = __webpack_exports__;

})();